<!DOCTYPE html>
<html>
<head>
    <title>DEIMS SDR - OpenLayers example</title>
    <meta charset="utf-8" />
    <title>Single Image WMS</title>
    <link rel="stylesheet" href="https://openlayers.org/en/v4.3.2/css/ol.css" type="text/css">
	<link href='https://fonts.googleapis.com/css?family=Open Sans' rel='stylesheet'>
	
    <!-- The line below is only needed for old environments like Internet Explorer and Android 4.x -->
    <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
	
    <script src="https://openlayers.org/en/v4.3.2/build/ol.js"></script>
	<script src="js/jquery-3.2.1.min.js"></script>
	<script src="js/lodash.min.js"></script>
	<script src="js/xml2json.min.js"></script>
	<script src="js/xml2json.js"></script>
	<script src="js/notify.js"></script>
	<link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
	<script type="text/javascript" src="bootstrap/js/bootstrap.js"></script>
	<link rel="stylesheet" href="font-awesome/css/font-awesome.min.css">
	
	<style>
        body {
            padding: 0;
            margin: 0;
        }
        html, body, #map {
            height: 100%;
            width: 100%;
        }
		
		#map {
			  width: 100%;
			  height: 100%;
			  position: relative;
			  top: 0;
			  left: 0;
		}
		.ol-popup {
			position: absolute;
			background-color: white;
			-webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
			filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
			padding: 15px;
			border-radius: 10px;
			border: 1px solid #cccccc;
			bottom: 12px;
			left: -50px;
			min-width: 280px;
			font-family: 'Open Sans';
		}
		.ol-popup:after, .ol-popup:before {
			top: 100%;
			border: solid transparent;
			content: " ";
			height: 0;
			width: 0;
			position: absolute;
			pointer-events: none;
		}
		.ol-popup:after {
			border-top-color: white;
			border-width: 10px;
			left: 48px;
			margin-left: -10px;
		}
		.ol-popup:before {
			border-top-color: #cccccc;
			border-width: 11px;
			left: 48px;
			margin-left: -11px;
		}
		.ol-popup-closer {
			text-decoration: none;
			position: absolute;
			top: 2px;
			right: 8px;
		}
		.ol-popup-closer:after {
			content: "âœ–";
		}

		.container {
			height: 100% !important;
			width: 100% !important;
			padding-left: 0px;
			padding-right: 0px;
		}
		
		.row {
			height: 100% !important;
			width: 100% !important;
		}
		
		#closer {
			padding-bottom: 1em;
			//text-align: right;
		}
	  
		#closer_button {
			color: #EB0000;
		}
	  
		.scrollable_style {
			overflow-y: scroll;
		}
	  
    </style>
	
</head>

<body>
    
	<div class="container">
		<div class="row" >
			<div id="map" class="col-sm-4"></div>
			<div class="col-sm-8" id="site_info">
				<div id="closer"></div>
				<div id="detailed_information" class="scrollable_style"></div>
			</div>
		</div>
	</div>
	
	<div id="popup" class="ol-popup">
		<a href="#" id="popup-closer" class="ol-popup-closer"></a>
		<div id="popup-content"></div>
    </div>
	
    <script>
	
	// resize infobox on window change
	$(window).on('resize', function(){
		
		var curr_height = $( document ).height() - document.getElementById('closer').clientHeight;
		$('.scrollable_style').css('max-height', curr_height);
		
	});
	
	
	// cartography settings
	var initial_zoom_level = 4;
	var map_centre = [1929025.946814, 7494089.923109];
	
	/**
     * Elements that make up the popup.
     */
    var container = document.getElementById('popup');
    var content = document.getElementById('popup-content');
    var closer = document.getElementById('popup-closer');
	

    /**
     * Create an overlay to anchor the popup to the map.
     */
    var overlay = new ol.Overlay(/** @type {olx.OverlayOptions} */ ({
		element: container,
		autoPan: true,
		autoPanAnimation: {
			duration: 250
        }
    }));
	  
	  
    /**
     * Add a click handler to hide the popup.
     * @return {boolean} Don't follow the href.
     */
    closer.onclick = function() {
		vectorSource.clear();
		overlay.setPosition(undefined);
        closer.blur();
        return false;
    };
	
	var fill = new ol.style.Fill({
	   color: 'rgba(255,153,51,0.75)'
	});
	
	var stroke = new ol.style.Stroke({
	   color: '#FFFFFF',
	   width: 1.25
	});
	
	var styles = [
	   new ol.style.Style({
		 image: new ol.style.Circle({
		   fill: fill,
		   stroke: stroke,
		   radius: 5
		 }),
		 fill: fill,
		 stroke: stroke
	   })
	 ];
	
	var vectorSource = new ol.source.Vector({});
	var point_layer = new ol.layer.Vector({
        source: vectorSource,
		style: styles,
		projection: 'EPSG:3857',
    });
	
	var wmsSource = new ol.source.TileWMS({
        url: 'https://data.lter-europe.net/geoserver/deims/wms?',
        params: {'LAYERS': 'deims:lter_eu_formal'},
        ratio: 1,
        serverType: 'geoserver',
    });
       
    var wmsLayer = new ol.layer.Tile({
        source: wmsSource
    });	
	
    var osm = [
        new ol.layer.Tile({
			source: new ol.source.OSM()
        }),
        wmsLayer
    ];
	  
	var view = new ol.View({
		projection: 'EPSG:3857',
		center: map_centre,
		zoom: initial_zoom_level
    });
	  
    var map = new ol.Map({
		layers: osm,
		overlays: [overlay],
        target: 'map',
        view: view
    });
	map.addLayer(point_layer)
	
	/**
     * Add a click handler to the map to render the popup.
     */
    map.on('singleclick', function(evt) {
		var viewResolution = /** @type {number} */ (view.getResolution());
        var url = wmsSource.getGetFeatureInfoUrl(
            evt.coordinate, viewResolution, 'EPSG:3857',
            {'INFO_FORMAT': 'application/json'});
         
		if (url) {
			$.getJSON(url, function(data) {
				var features = data["features"];
				
				if (features[0]){  
					var properties = features[0];
					var information_obj = properties["properties"];
					var site_url = "<a href='https://data.lter-europe.net/deims/site/" + information_obj["uuid"] + "' target='_blank'>Record on DEIMS-SDR</a>";
					var ef_url = "<a href='https://data.lter-europe.net/deims/node/" + information_obj["nid"] + "/emf' target='_blank'>View EF record</a>";
					var ef_address = "https://data.lter-europe.net/deims/node/" + information_obj["nid"] + "/emf";
					
					content.innerHTML = "<b>" + information_obj["name"] + "</b><br>" + "uuid: " + information_obj["uuid"] + "<br>" + "Classification: " + information_obj["classification"] + "<br>" + site_url;
					content.innerHTML += '<br>' + ef_url;
					content.innerHTML += "<br><a id='something' href='javascript:;'>More details ...</a>";
					
					var current_coords = ol.proj.transform([information_obj["field_coordinates_lon"], information_obj["field_coordinates_lat"]], 'EPSG:4326','EPSG:3857');
				
					overlay.setPosition(current_coords);
					
					var selected_site = new ol.Feature({
						geometry: new ol.geom.Point(current_coords),
					}); 
					
					vectorSource.clear();
					vectorSource.addFeature(selected_site);
					
					// Listener for site details 
					$('#something').click( function() {
						
						document.getElementById('map').setAttribute("style","width:50%","height:100%");
						
						// not finding site_info
						document.getElementById('site_info').setAttribute("style","width:50%");
						map.updateSize();
						
						overlay.setPosition(undefined);
						closer.blur();
						
						parse_ef(ef_address); 
						document.getElementById('closer').innerHTML = "<br><a id='closer_button' href='javascript:;'><i class='fa fa-times' aria-hidden='true'></i> Close</a>"
						
						// Listener for closes details 
						$('#closer_button').click( function() {
						
							document.getElementById('map').setAttribute("style","width:100%");
							document.getElementById('site_info').setAttribute("style","width:0%","height:0%");
					
							map.updateSize();
							vectorSource.clear();
							// reset map view
							map.getView().animate({zoom: initial_zoom_level, center: map_centre});		
						})
					})	
				};
			});	  
        }  
    });
	
	
	// function for parsing the ef	
	function parse_ef(ef_address) {
	
		var x = new XMLHttpRequest();
		x.open("GET", ef_address, true);
		x.onreadystatechange = function () {
			if (x.readyState == 4 && x.status == 200)
			{
				var doc = x.responseXML;
				var x2js = new X2JS();
				var jsonObj = x2js.xml2json(doc);
				console.log(jsonObj);
				 
				var curr_height = $( document ).height() - document.getElementById('closer').clientHeight;
				$('.scrollable_style').css('max-height', curr_height);
				
				var uuid = jsonObj["EnvironmentalMonitoringFacility"]["inspireId"]["Identifier"]["localId"]["__text"];
				
				// Clear previous text
				document.getElementById('detailed_information').innerHTML = "";
				
				// Title
				document.getElementById('detailed_information').innerHTML += "<h1>" + jsonObj["EnvironmentalMonitoringFacility"]["name"]["__text"] + "</h1>";
				
				// <a href='https://data.lter-europe.net/deims/site/" + uuid + "' target='_blank'>Record on DEIMS-SDR</a>
				document.getElementById('detailed_information').innerHTML += "<h4>" + "<a href='https://data.lter-europe.net/deims/site/" + uuid + "' target='_blank'>" + uuid + "</a></h4><br>";
				
				// description
				if (jsonObj["EnvironmentalMonitoringFacility"]["additionalDescription"]["__text"]) {
					document.getElementById('detailed_information').innerHTML += "<b>Description: </b>" + jsonObj["EnvironmentalMonitoringFacility"]["additionalDescription"]["__text"] + "<br>";
				}
				
				// media monitored
				if (jsonObj["EnvironmentalMonitoringFacility"]["mediaMonitored"]["_xlink:title"]) {
					document.getElementById('detailed_information').innerHTML += "<br><b>media monitored: </b>" + jsonObj["EnvironmentalMonitoringFacility"]["mediaMonitored"]["_xlink:title"] + "<br>";
				}
				
				// onlineResource
				if (jsonObj["EnvironmentalMonitoringFacility"]["onlineResource"]) {
					document.getElementById('detailed_information').innerHTML += '<br><b>onlineResource: </b><br>'; 
					for (x in jsonObj["EnvironmentalMonitoringFacility"]["onlineResource"]) {
						if (jsonObj["EnvironmentalMonitoringFacility"]["onlineResource"][x]["__text"] != "" ) {
							var online_resource_url = jsonObj["EnvironmentalMonitoringFacility"]["onlineResource"][x]["__text"];
							document.getElementById('detailed_information').innerHTML += "<a href=" + online_resource_url + " target='_blank'>" + online_resource_url + "</a><br>";
						}
					}
				}
				
				// Observing capabilities
				if (jsonObj["EnvironmentalMonitoringFacility"]["observingCapability"]) {
					document.getElementById('detailed_information').innerHTML += '<br><b>ObservingCapabilities: </b>'; 
					for (x in jsonObj["EnvironmentalMonitoringFacility"]["observingCapability"]) {
						if (jsonObj["EnvironmentalMonitoringFacility"]["observingCapability"][x]["ObservingCapability"]["observedProperty"]["_xlink:title"] != "" ) {
							document.getElementById('detailed_information').innerHTML += jsonObj["EnvironmentalMonitoringFacility"]["observingCapability"][x]["ObservingCapability"]["observedProperty"]["_xlink:title"] + "; ";
						}
					}
					document.getElementById('detailed_information').innerHTML += "<br>";
				}
				
				// activities
				if (jsonObj["EnvironmentalMonitoringFacility"]["involvedIn"]) {
					document.getElementById('detailed_information').innerHTML += '<br><b>Activities: </b><br>'; 
					for (x in jsonObj["EnvironmentalMonitoringFacility"]["involvedIn"]) {
						if (jsonObj["EnvironmentalMonitoringFacility"]["involvedIn"][x]["EnvironmentalMonitoringActivity"]["name"]["__text"] != "" ) {
							 
							var activity_url = jsonObj["EnvironmentalMonitoringFacility"]["involvedIn"][x]["EnvironmentalMonitoringActivity"]["onlineResource"]["__text"];
							var activity_title = jsonObj["EnvironmentalMonitoringFacility"]["involvedIn"][x]["EnvironmentalMonitoringActivity"]["name"]["__text"];
											
							document.getElementById('detailed_information').innerHTML += "<a href=" + activity_url + " target='_blank'>" + activity_title + "</a><br>";
							
						}
					} 
				}
				
				// responsibleParty
				if (jsonObj["EnvironmentalMonitoringFacility"]["responsibleParty"]) {
					document.getElementById('detailed_information').innerHTML += '<br><b>responsibleParty: </b><br>'; 
					for (x in jsonObj["EnvironmentalMonitoringFacility"]["responsibleParty"]) {
						if (jsonObj["EnvironmentalMonitoringFacility"]["responsibleParty"] != "" ) {
													
							var responsibleParty;
							
							if (responsibleParty = jsonObj["EnvironmentalMonitoringFacility"]["responsibleParty"][x]["RelatedParty"]["individualName"]) {
								// person case 	
								responsibleParty = jsonObj["EnvironmentalMonitoringFacility"]["responsibleParty"][x]["RelatedParty"]["individualName"]["CharacterString"]["__text"];
							}
							else {
								// organisation case
								responsibleParty = jsonObj["EnvironmentalMonitoringFacility"]["responsibleParty"][x]["RelatedParty"]["organisationName"]["CharacterString"]["__text"];
							}
							
							document.getElementById('detailed_information').innerHTML += responsibleParty + "<br>";
							
						}
					} 
				}
				
				
				// belongsTo
				if (jsonObj["EnvironmentalMonitoringFacility"]["belongsTo"]) {
					document.getElementById('detailed_information').innerHTML += '<br><b>belongsTo: </b><br>';
					
					for (x in jsonObj["EnvironmentalMonitoringFacility"]["belongsTo"]) {
					
						// what if there is only one belongsTo
						if (jsonObj["EnvironmentalMonitoringFacility"]["belongsTo"].length == null){
							var belongsTo_url = jsonObj["EnvironmentalMonitoringFacility"]["belongsTo"]["_xlink:href"];
							console.log(belongsTo_url)
							var belongsTo_title = jsonObj["EnvironmentalMonitoringFacility"]["belongsTo"]["NetworkFacility"]["name"]["__text"];
											
							document.getElementById('detailed_information').innerHTML += "<a href=" + belongsTo_url + " target='_blank'>" + belongsTo_title + "</a><br>";
							return;
							
						};
					
					
						if (jsonObj["EnvironmentalMonitoringFacility"]["belongsTo"][x]["NetworkFacility"]["name"]["__text"] != "" ) {
							 
							var belongsTo_url = jsonObj["EnvironmentalMonitoringFacility"]["belongsTo"][x]["_xlink:href"];
							var belongsTo_title = jsonObj["EnvironmentalMonitoringFacility"]["belongsTo"][x]["NetworkFacility"]["name"]["__text"];
											
							document.getElementById('detailed_information').innerHTML += "<a href=" + belongsTo_url + " target='_blank'>" + belongsTo_title + "</a><br>";
							
						}
					} 
				}
				
				
				var geom_poly = jsonObj["EnvironmentalMonitoringFacility"]["geometry"]["MultiGeometry"]["geometryMember"];
				
				// if there is no boundary information available
				if (geom_poly[0] === undefined || geom_poly[0] === null) {
					$.notify("There is no boundary information available for this site :(", {position:"bottom center"}, "error");
					return;
				}
				
				
				// close popup
				overlay.setPosition(undefined);
				closer.blur();
				
				var geom_text = geom_poly[0]["Polygon"]["exterior"]["LinearRing"]["posList"]["__text"];		
				var geom_array = geom_text.split(' ');
				
				coords_array = [];
				
				for (i = 0; i < geom_array.length; i+=2) { 
					coords_array.push(ol.proj.transform([geom_array[i+1] * 1, geom_array[i] * 1], 'EPSG:4326', 'EPSG:3857'));
				}
				var linearRing = new ol.geom.LinearRing(coords_array);
					
				var poly_feature = new ol.Feature({
					geometry: new ol.geom.Polygon([coords_array])
				});
				
				vectorSource.addFeature(poly_feature);
				
				var zoom_polygon = /** @type {ol.geom.SimpleGeometry} */ (poly_feature.getGeometry());
				var zoom_extent = zoom_polygon.getExtent();
					
				//view.fit(zoom_extent, {duration: 1000, padding: [50, 50, 50, 50], maxZoom: 14});
				view.fit(zoom_extent, {duration: 1000, padding: [50, 50, 50, 50]});
				
			}
			if (x.readyState == 4 && x.status == 500) {
				$.notify("The EF record could not be loaded :(", {position:"bottom center"}, "error");
				return;
			}
		  
		};
		
		x.send(null);
		
		return true;             
	}  		
	
    </script>
</body>
</html>
